name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request: {}

jobs:
  test-linux:
    name: test py${{ matrix.python-version }} on linux
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install
        run: |
          python -m pip install -U wheel pip
          pip install -e .[testing,build]
          pip install -U git+https://github.com/typeddjango/pytest-mypy-plugins.git
        env:
          SKIP_CYTHON: 1

      - name: compile
        run: |
          make build-trace
          python -c "import sys, psygnal; print('compiled:', psygnal._compiled); sys.exit(0 if psygnal._compiled else 1)"
          ls -alh
          ls -alh psygnal/

      - name: test
        run: pytest --color=yes --cov=psygnal --cov-report=xml

      - name: remove compiled binaries
        run: |
          pip uninstall -y cython
          rm -rf psygnal/*.so psygnal/*.c psygnal/__pycache__
          ls -alh
          ls -alh psygnal/

      - name: test uncompiled without deps
        run: pytest --color=yes --cov=psygnal --cov-report=xml

      - name: Coverage
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true

  test-windows-mac:
    name: test py${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        platform: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install
        run: |
          python -m pip install -U wheel pip
          pip install -e .[testing,build]
          pip install -U git+https://github.com/typeddjango/pytest-mypy-plugins.git

      - name: test
        run: pytest --color=yes --cov=psygnal --cov-report=xml

      - name: Coverage
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true

  build:
    name: Build wheels on ${{ matrix.os }}
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.2.0a1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

      - name: Build sdist
        if: matrix.os == 'ubuntu-20.04'
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-20.04'
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}

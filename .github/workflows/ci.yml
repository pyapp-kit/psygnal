name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request: {}
  workflow_dispatch:

jobs:

  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install check-manifest && check-manifest

  test-linux:
    name: test py${{ matrix.python-version }} on linux
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - uses: tlambert03/setup-qt-libs@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install
        run: |
          python -m pip install -U wheel pip
          pip install -e .[test,testqt,build]
        env:
          SKIP_CYTHON: 1

      - name: compile
        run: |
          make build-trace
          python -c "import sys, psygnal; print('compiled:', psygnal._compiled); sys.exit(0 if psygnal._compiled else 1)"
          ls -alh
          ls -alh src/psygnal/

      - name: test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: pytest --color=yes --cov=psygnal --cov-report=xml --cov-report=term-missing

      - name: remove compiled binaries
        run: |
          pip uninstall -y cython
          rm -rf src/**/*.so src/**/*.c src/**/__pycache__
          ls -alh
          ls -alh src/psygnal/

      - name: test uncompiled
        uses: GabrielBB/xvfb-action@v1
        with:
          run: pytest --color=yes --cov=psygnal --cov-report=xml --cov-append

      - name: switch qt backend
        run: |
          pip uninstall PyQt5 PyQt5-qt5 PyQt5-sip -y
          pip install PySide2

      - name: test uncompiled
        uses: GabrielBB/xvfb-action@v1
        with:
          run: pytest --color=yes --cov=psygnal --cov-report=xml --cov-append tests/test_qt_compat.py

      - run: ls -la

      - name: Coverage
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true

  test-windows-mac:
    name: test py${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        platform: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install
        run: |
          python -m pip install -U wheel pip
          pip install -e .[test,testqt,build]

      - name: test
        run: pytest --color=yes

  test-magicgui:
    name: test magicgui
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: psygnal

      - uses: actions/checkout@v3
        with:
          repository: napari/magicgui
          path: magicgui

      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - uses: tlambert03/setup-qt-libs@v1
      - name: install
        run: |
          python -m pip install -U pip pytest-mypy-testing
          pip install -e magicgui[testing,pyside2]
          pip install -e psygnal

      - name: test magicgui
        uses: GabrielBB/xvfb-action@v1
        with:
          run: python -m pytest magicgui/tests -v --color=yes --ignore magicgui/tests/typesafety

  build:
    name: Build wheels on ${{ matrix.os }}
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.9"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.1

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      - name: Build sdist
        if: matrix.os == 'ubuntu-20.04'
        run: pip install build && python -m build --sdist

      - uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-20.04'
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}

      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true

name: Publish to PyPI

on:
  push:
    branches: [main]
    tags: [v*]

jobs:
  test:
    uses: pyapp-kit/workflows/.github/workflows/test-pyrepo.yml@v2
    with:
      hatch-build-hooks-enable: true
      coverage-upload: none

  deploy-sdist:
    needs: test
    if: success() && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: ðŸ‘· Build
        run: |
          python -m pip install build
          python -m build

      - name: ðŸš¢ Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: "./dist/*"

  deploy-wheel:
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs: deploy-sdist
    name: mypyc wheels (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: linux-x86_64
          - os: windows-latest
            name: windows-amd64
          - os: macos-13
            name: macos-x86_64
            macos_arch: "x86_64"
          - os: macos-14
            name: macos-arm64
            macos_arch: "arm64"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build wheels via cibuildwheel
        uses: pypa/cibuildwheel@v2.21.0
        with:
          output-dir: dist
        env:
          CIBW_ARCHS_MACOS: "${{ matrix.macos_arch }}"

      - name: Upload wheels as workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-mypyc-wheels
          path: ./dist/*.whl

      - name: ðŸš¢ Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

name: CI

on:
  push:
    branches: [main]
  pull_request: {}
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # run once a week

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx run check-manifest

  test:
    name: Test
    uses: pyapp-kit/workflows/.github/workflows/test-pyrepo.yml@v2
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      pip-post-installs: ${{ matrix.pydantic }}
      hatch-build-hooks-enable: ${{ matrix.compile }}
      pip-install-pre-release: ${{ github.event_name == 'schedule' }}
      coverage-upload: artifact
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        compile: [true, false]
        include:
          - os: ubuntu-latest
            python-version: "3.12"
            pydantic: "'pydantic<2'"
          - os: windows-latest
            python-version: "3.11"
            pydantic: "'pydantic<2'"
        exclude:
          # still working on ci test errors
          - os: windows-latest
            python-version: "3.12"
          - compile: true
            python-version: "3.13"

  test-qt:
    name: Test Qt
    uses: pyapp-kit/workflows/.github/workflows/test-pyrepo.yml@v2
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      qt: ${{ matrix.qt }}
      extras: "test,testqt"
      hatch-build-hooks-enable: ${{ matrix.compile }}
      pip-install-pre-release: ${{ github.event_name == 'schedule' }}
      coverage-upload: artifact
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        os: [macos-latest, windows-latest]
        qt: [PyQt5, PyQt6, PySide6]
        compile: [true, false]
        include:
          - os: macos-13
            qt: "PySide2 'numpy<2'"
          - os: windows-latest
            python-version: "3.9"
            qt: "PySide2 'numpy<2'"

  upload_coverage:
    if: always()
    needs: [test, test-qt]
    uses: pyapp-kit/workflows/.github/workflows/upload-coverage.yml@v2
    secrets: inherit

  test-magicgui:
    uses: pyapp-kit/workflows/.github/workflows/test-dependents.yml@v2
    with:
      dependency-repo: pyapp-kit/magicgui
      dependency-extras: "test"
      qt: "pyside2"
      python-version: "3.10"

  typing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: install
        run: |
          python -m pip install -U pip
          python -m pip install -e .
          python -m pip install pytest pytest-mypy-plugins
      - name: test
        run: pytest typesafety --mypy-only-local-stub --color=yes

  benchmarks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: install
        run: |
          python -m pip install -e .[test]
          python -m pip install pytest-codspeed
          python -c "import sys, psygnal; sys.exit(0 if psygnal._compiled else 1)"
        env:
          HATCH_BUILD_HOOKS_ENABLE: "1"

      - name: Run benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: pytest --codspeed -v --color=yes
